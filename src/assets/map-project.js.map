{"version":3,"file":"map-project.js","sources":["../node_modules/ol/CollectionEventType.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/events/EventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Event.js","../node_modules/ol/events/Target.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/Collection.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/has.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/TileState.js","../node_modules/ol/asserts.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/ViewHint.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/math.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/coordinate.js","../node_modules/ol/easing.js","../node_modules/ol/sphere.js","../node_modules/ol/console.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/proj/utm.js","../node_modules/ol/proj.js","../node_modules/ol/transform.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/View.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/control/defaults.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/Key.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/layer/Group.js","../node_modules/ol/render/EventType.js","../node_modules/ol/layer/Layer.js","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../node_modules/ol/color.js","../node_modules/ol/size.js","../node_modules/ol/expr/expression.js","../node_modules/ol/expr/cpu.js","../node_modules/ol/ImageState.js","../node_modules/ol/Image.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/colorlike.js","../node_modules/ol/render/canvas.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/render/canvas/style.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/render/Event.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/Map.js","../node_modules/ol/Tile.js","../node_modules/ol/DataTile.js","../node_modules/ol/ImageTile.js","../node_modules/ol/TileRange.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj/common.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/render/canvas/ZIndexContext.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/linechunk.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/uri.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/Source.js","../node_modules/ol/source/Tile.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/OSM.js","../node_modules/ol/Feature.js","../node_modules/ol/interaction/Select.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/featureloader.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/render/Feature.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/source/Vector.js","../node_modules/ol/Overlay.js","../data/sensor-utils.js","../data/air-properties-sensor.js","../data/air-quality-sensor.js","../data/water-level-temperature-sensor.js","../popover.js","../layer_switcher/base-layer-switcher.js","../layer_switcher/vector-layer-switcher.js","../overlays/temperature-overlay.js","../overlays/wind-direction-overlay.js","../overlays/overlay.js","../main.js"],"sourcesContent":["/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.5.0';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent instanceof PointerEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    pointerEvent instanceof PointerEvent && pointerEvent.pointerType == 'mouse'\n  );\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    pointerEvt instanceof PointerEvent && pointerEvt.pointerType === 'touch'\n  );\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt instanceof PointerEvent && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    pointerEvent instanceof PointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n      this.clearRenderer();\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   `['resolution']` returns the current resolution\n *   `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   `['zoom']` The current zoom level (WebGL only).\n *   `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   `['/', value1, value2]` divides `value1` by `value2`\n *   `['+', value1, value2, ...]` adds the values\n *   `['-', value1, value2]` subtracts `value2` from `value1`\n *   `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   `['abs', value1]` returns the absolute value of `value1`\n *   `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return this.container;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport Event from '../events/Event.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {getUid} from '../util.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes a {@link module:ol/Feature~Feature} and a\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent,\n        ),\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject from './Object.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {outerHeight, outerWidth, removeChildren} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      this.element?.remove();\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","import {fromLonLat} from 'ol/proj.js';\r\nimport Point from 'ol/geom/Point.js';\r\nimport Feature from 'ol/Feature.js';\r\nimport VectorSource from 'ol/source/Vector.js';\r\n\r\nfunction createSensorDataVectorSource(sensorData) {\r\n    const sensorDataSource = new VectorSource();\r\n    const features = [];\r\n    sensorData.forEach(function (data) {\r\n      const feature = new Feature(\r\n        new Point(fromLonLat([data.coord.lon, data.coord.lat])),\r\n      );\r\n      feature.setProperties(data);\r\n      features.push(feature);\r\n    });\r\n    sensorDataSource.addFeatures(features);\r\n\r\n    return sensorDataSource\r\n}\r\n\r\nexport {createSensorDataVectorSource}","import Style from 'ol/style/Style.js';\r\nimport CircleStyle from 'ol/style/Circle.js';\r\nimport Fill from 'ol/style/Fill.js';\r\nimport Stroke from 'ol/style/Stroke.js';\r\nimport Text from 'ol/style/Text.js';\r\nimport Icon from 'ol/style/Icon.js';\r\nimport { createSensorDataVectorSource } from './sensor-utils.js';\r\nimport { create } from 'ol/transform';\r\n\r\nasync function createAirPropertiesSensorData(longitude, latitude) {\r\n    const fetchedData = await fetchAirPropertiesSensorData(longitude, latitude) \r\n    return {\r\n    \r\n      \"coord\": {\r\n         \"lon\": longitude,\r\n         \"lat\": latitude\r\n      },\r\n      \"sensor_name\": \"Air Properties Sensor\",\r\n      \"module_name\": \"Modul 2\",\r\n      \"data\": fetchedData\r\n   }\r\n}\r\n\r\nasync function fetchAirPropertiesSensorData(longitude, latitude) {\r\n  let url = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&models=icon_seamless&current=temperature_2m,wind_speed_10m,wind_direction_10m,relative_humidity_2m,surface_pressure&forecast_days=1`\r\n  const response = await fetch(url, {\r\n      method: \"GET\"\r\n  })\r\n  const data = await response.json();\r\n  return {\r\n    \"wind_speed\": data.current.wind_speed_10m,\r\n    \"wind_direction\": data.current.wind_direction_10m,\r\n    \"air_temperature\": data.current.temperature_2m,\r\n    \"barometric_pressure\": data.current.surface_pressure,\r\n    \"humidity\": data.current.relative_humidity_2m,\r\n    \"battery_voltage\": 4\r\n  }\r\n}\r\n\r\nconst airPropertiesSensorData = [\r\n    await createAirPropertiesSensorData(9.542039207249285, 54.51069732199451), // Schleswig Schloss\r\n    await createAirPropertiesSensorData(9.71559392307798, 54.52414462677734), // Missunde\r\n    await createAirPropertiesSensorData(9.934568072662614, 54.66034130282637), // Kappeln\r\n    await createAirPropertiesSensorData(11.19104586109911, 54.51394399850085), // Fehmarn\r\n    await createAirPropertiesSensorData(12.607701028979859, 41.8793343283549), // Rom\r\n    await createAirPropertiesSensorData(-1.7277645297286661, 43.40528026437781), // San Sebastian\r\n    await createAirPropertiesSensorData(32.559898, 15.508457), // Khartum Afrika\r\n\r\n\r\n        // await createAirPropertiesSensorData(9.4667, 54.796),\r\n        // await createAirPropertiesSensorData(9.467, 54.7885),\r\n        // await createAirPropertiesSensorData(9.4295, 54.802),\r\n        // await createAirPropertiesSensorData(9.868234526079595, 54.47305515348609), // Eckernförde\r\n        // await createAirPropertiesSensorData(10.133823712178105, 54.31114321214153), // Kiel Querkai\r\n        // await createAirPropertiesSensorData(10.17132953616414, 54.329012329712754), // Kiel Schwentine Werft\r\n        // await createAirPropertiesSensorData(10.216554343991787, 54.4042499260097), // Kiel Laboe\r\n        // await createAirPropertiesSensorData(9.711172066706121, 54.313332929813754), // Rendsburg\r\n        // await createAirPropertiesSensorData(9.126408784000207, 53.88780618582467), // Brunsbüttel\r\n        // await createAirPropertiesSensorData(10.980480508401266, 54.375842855573865), // Heiligenhafen\r\n        // await createAirPropertiesSensorData(8.296229935540385, 54.909481414684905), // Westerland\r\n        // await createAirPropertiesSensorData(8.694068755148862, 54.73080963743536), // Dagebüll\r\n        // await createAirPropertiesSensorData(8.815529667066356, 54.48633428418012), // Nordstrand\r\n        // await createAirPropertiesSensorData(8.58397921359508, 54.324191810957615), // Sankt Peter Ording\r\n        // await createAirPropertiesSensorData(8.849777321827073, 54.12813503606), // Büsum\r\n        // await createAirPropertiesSensorData( 9.591076207849072, 54.845860511473575), // Bockholm\r\n]\r\n\r\nfunction createAirPropertiesSensorStyle(feature) {\r\n    const data = feature.get('data')\r\n\r\n    const wind_arrow = new Style({\r\n        image: new Icon({\r\n        src: 'data:image/svg+xml;utf8,' + encodeURIComponent(`\r\n            <svg width=\"30\" height=\"30\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <polygon points=\"50,0 90,100 50,80 10,100\" fill=\"blue\"/>\r\n            </svg>\r\n        `),\r\n        rotation: (Math.PI / 180) * (data.wind_direction + 180),\r\n        rotateWithView: true,\r\n        scale: 0.75,\r\n        anchor: [0.5,0.6]\r\n        })\r\n    });\r\n\r\n    const circle = new Style({\r\n        image: new CircleStyle({\r\n        radius: 15,\r\n        fill: new Fill({ color: 'rgba(236, 248, 255, 0.86)' }),\r\n        stroke: new Stroke({ color: '#0066cc', width: 1 })\r\n        }),\r\n        text: new Text({\r\n        font: '14px Calibri,sans-serif',\r\n        text: \"M2\",  // Use the 'name' property for the label\r\n        fill: new Fill({ color: '#000' }),\r\n        stroke: new Stroke({ color: '#fff', width: 3 }),\r\n        offsetY: -15,\r\n    })\r\n    });\r\n\r\n    return [circle, wind_arrow]\r\n}\r\n\r\nfunction createAirPropertiesSensorStyleSelected(feature, stroke_color) {\r\n    const data = feature.get('data')\r\n\r\n    const wind_arrow = new Style({\r\n        image: new Icon({\r\n        src: 'data:image/svg+xml;utf8,' + encodeURIComponent(`\r\n            <svg width=\"30\" height=\"30\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <polygon points=\"50,0 90,100 50,80 10,100\" fill=\"${stroke_color}\"/>\r\n            </svg>\r\n        `),\r\n        rotation: (Math.PI / 180) * (data.wind_direction + 180),\r\n        rotateWithView: true,\r\n        scale: 0.75,\r\n        anchor: [0.5,0.6]\r\n        })\r\n    });\r\n\r\n    const circle = new Style({\r\n        image: new CircleStyle({\r\n        radius: 15,\r\n        fill: new Fill({ color: 'rgba(236, 248, 255, 0.86)' }),\r\n        stroke: new Stroke({ color: stroke_color, width: 1 })\r\n        }),\r\n        text: new Text({\r\n        font: '14px Calibri,sans-serif',\r\n        text: \"M2\",  // Use the 'name' property for the label\r\n        fill: new Fill({ color: '#000' }),\r\n        stroke: new Stroke({ color: '#fff', width: 3 }),\r\n        offsetY: -15,\r\n    })\r\n    });\r\n\r\n    return [circle, wind_arrow]\r\n}\r\n\r\n\r\nconst airPropertiesSensorStyle = function (feature) {\r\n    return createAirPropertiesSensorStyle(feature);\r\n}\r\n\r\nfunction AirPropertiesPopoverContent(feature) {\r\n    const data = feature.get(\"data\")\r\n    const coord = feature.get(\"coord\")\r\n    return `\r\n    <p class=\"p-0 m-0\">Module Name: ${feature.get(\"module_name\")}</p>\\n\r\n    <p class=\"p-0 m-0\">Longitude: ${coord.lon}</p>\\n\r\n    <p class=\"p-0 m-0\">Latitude: ${coord.lat}</p>\\n\r\n    <p class=\"p-0 m-0\">Wind Speed: ${data.wind_speed}km/h</p>\\n\r\n    <p class=\"p-0 m-0\">Wind Direction: ${data.wind_direction}°</p>\\n\r\n    <p class=\"p-0 m-0\">Air Temperature: ${data.air_temperature}°C</p>\\n\r\n    <p class=\"p-0 m-0\">Barometric Pressure: ${data.barometric_pressure}hPa</p>\\n\r\n    <p class=\"p-0 m-0\">Humidity: ${data.humidity}%</p>\\n\r\n    <p class=\"p-0 m-0\">Battery Voltage: ${data.battery_voltage}V</p>\r\n    `\r\n}\r\n\r\nfunction showAirPropertiesSensorData(feature) {\r\n    let selectedSensorData = document.getElementById(\"selected-sensor-data\")\r\n    let sensorDataHeader = document.createElement(\"h2\")\r\n    let sensor_name = document.createElement(\"p\")\r\n    let info = document.createElement(\"div\")\r\n\r\n    \r\n    selectedSensorData.innerHTML = \"\"\r\n    sensorDataHeader.textContent = \"Sensor Data\"\r\n    sensor_name.textContent = \"Sensor Name: \" + feature.get(\"sensor_name\")\r\n    info.innerHTML = AirPropertiesPopoverContent(feature)\r\n    selectedSensorData.append(sensorDataHeader, sensor_name, info)\r\n}\r\n\r\nconst airPropertiesSensorVectorSource = createSensorDataVectorSource(airPropertiesSensorData)\r\n\r\nexport { createAirPropertiesSensorStyleSelected ,airPropertiesSensorStyle, airPropertiesSensorData, showAirPropertiesSensorData, airPropertiesSensorVectorSource, AirPropertiesPopoverContent}","import VectorLayer from 'ol/layer/Vector.js';\r\nimport { createSensorDataVectorSource } from './sensor-utils';\r\nimport {fromLonLat} from 'ol/proj.js';\r\nimport Point from 'ol/geom/Point.js';\r\nimport Feature from 'ol/Feature.js';\r\nimport VectorSource from 'ol/source/Vector.js';\r\nimport Style from 'ol/style/Style.js';\r\nimport CircleStyle from 'ol/style/Circle.js';\r\nimport Fill from 'ol/style/Fill.js';\r\nimport Stroke from 'ol/style/Stroke.js';\r\nimport Text from 'ol/style/Text.js';\r\nimport Icon from 'ol/style/Icon.js';\r\n\r\nfunction createAirQualitySensorData(longitude, latitude) {\r\n  return {\r\n      \"coord\": {\r\n         \"lon\": longitude,\r\n         \"lat\": latitude\r\n      },\r\n      \"sensor_name\": \"Air Quality Sensor\",\r\n      \"module_name\": \"Modul 3\",\r\n      \"data\": {\r\n          \"trace_gases\": {\r\n              \"co\": 10,\r\n              \"co2\": 10,\r\n              \"so2\": 10,\r\n              \"no2\": 10,\r\n              \"o3\": 10,\r\n          },\r\n          \"black_carbon\": 10,\r\n          \"aerosols\": 10,\r\n          \"battery_voltage\": 10\r\n      }\r\n   }\r\n}\r\n\r\nconst airQualitySensorData = [\r\n    await createAirQualitySensorData(9.436822129361424, 54.78839605311228),\r\n    // await createSensorData(9.4295, 54.802),\r\n    // await createSensorData(9.542039207249285, 54.51069732199451), // Schleswig Schloss\r\n    // await createSensorData(9.71559392307798, 54.52414462677734), // Missunde\r\n    // await createSensorData(9.934568072662614, 54.66034130282637), // Kappeln\r\n    // await createSensorData(9.868234526079595, 54.47305515348609), // Eckernförde\r\n    // await createSensorData(10.133823712178105, 54.31114321214153), // Kiel Querkai\r\n    // await createSensorData(10.17132953616414, 54.329012329712754), // Kiel Schwentine Werft\r\n    // await createSensorData(10.216554343991787, 54.4042499260097), // Kiel Laboe\r\n    // await createSensorData(9.711172066706121, 54.313332929813754), // Rendsburg\r\n    // await createSensorData(9.126408784000207, 53.88780618582467), // Brunsbüttel\r\n    // await createSensorData(10.980480508401266, 54.375842855573865), // Heiligenhafen\r\n    // await createSensorData(11.19104586109911, 54.51394399850085), // Fehmarn\r\n    // await createSensorData(8.296229935540385, 54.909481414684905), // Westerland\r\n    // await createSensorData(8.694068755148862, 54.73080963743536), // Dagebüll\r\n    // await createSensorData(8.815529667066356, 54.48633428418012), // Nordstrand\r\n    // await createSensorData(8.58397921359508, 54.324191810957615), // Sankt Peter Ording\r\n    // await createSensorData(8.849777321827073, 54.12813503606), // Büsum\r\n    // await createSensorData( 9.591076207849072, 54.845860511473575), // Bockholm\r\n]\r\n\r\nfunction createAirQualitySensorStyle(feature) {\r\n  const data = feature.get('data')\r\n\r\n  const circle = new Style({\r\n    image: new CircleStyle({\r\n      radius: 15,\r\n      fill: new Fill({ color: 'rgba(236, 248, 255, 0.86)' }),\r\n      stroke: new Stroke({ color: '#0066cc', width: 1 })\r\n    }),\r\n    text: new Text({\r\n    font: '14px Calibri,sans-serif',\r\n    text: \"M3\",  // Use the 'name' property for the label\r\n    fill: new Fill({ color: '#000' }),\r\n    stroke: new Stroke({ color: '#fff', width: 3 }),\r\n    offsetY: -15,\r\n  })\r\n  });\r\n\r\n  return circle\r\n}\r\n\r\nfunction createAirQualitySensorStyleSelected(feature, stroke_color) {\r\n  const data = feature.get('data')\r\n\r\n  const circle = new Style({\r\n    image: new CircleStyle({\r\n      radius: 15,\r\n      fill: new Fill({ color: 'rgba(236, 248, 255, 0.86)' }),\r\n      stroke: new Stroke({ color: stroke_color, width: 1 })\r\n    }),\r\n    text: new Text({\r\n    font: '14px Calibri,sans-serif',\r\n    text: \"M3\",  // Use the 'name' property for the label\r\n    fill: new Fill({ color: '#000' }),\r\n    stroke: new Stroke({ color: '#fff', width: 3 }),\r\n    offsetY: -15,\r\n  })\r\n  });\r\n\r\n  return circle\r\n}\r\n\r\n\r\nconst airQualitySensorStyle = function (feature) {\r\n    return createAirQualitySensorStyle(feature);\r\n}\r\n\r\nfunction AirQualityPopoverContent(feature) {\r\n    const data = feature.get(\"data\")\r\n    const coord = feature.get(\"coord\")\r\n    return `\r\n    <p class=\"p-0 m-0\">Module Name: ${feature.get(\"module_name\")}</p>\\n\r\n    <p class=\"p-0 m-0\">Longitude: ${coord.lon}</p>\\n\r\n    <p class=\"p-0 m-0\">Latitude: ${coord.lat}</p>\\n\r\n    <p class=\"p-0 m-0\">CO: ${data.trace_gases.co}mg/m³</p>\\n\r\n    <p class=\"p-0 m-0\">CO2: ${data.trace_gases.co2}ppm</p>\\n\r\n    <p class=\"p-0 m-0\">SO2: ${data.trace_gases.so2}µg/m³</p>\\n\r\n    <p class=\"p-0 m-0\">NO2: ${data.trace_gases.no2}µg/m³</p>\\n\r\n    <p class=\"p-0 m-0\">O3: ${data.trace_gases.o3}µg/m³</p>\\n\r\n    <p class=\"p-0 m-0\">Black Carbon: ${data.black_carbon}µg/m³</p>\\n\r\n    <p class=\"p-0 m-0\">Aerosols: ${data.aerosols}µg/m³</p>\\n\r\n    <p class=\"p-0 m-0\">Battery Voltage: ${data.battery_voltage}V</p>\r\n    `\r\n}\r\n\r\nfunction showAirQualitySensorData(feature) {\r\n    let selectedSensorData = document.getElementById(\"selected-sensor-data\")\r\n    let sensorDataHeader = document.createElement(\"h2\")\r\n    let sensor_name = document.createElement(\"p\")\r\n    let info = document.createElement(\"div\")\r\n    \r\n    selectedSensorData.innerHTML = \"\"\r\n    sensorDataHeader.textContent = \"Sensor Data\"\r\n    sensor_name.textContent = \"Sensor Name: \" + feature.get(\"sensor_name\")\r\n    info.innerHTML = AirQualityPopoverContent(feature)\r\n\r\n    selectedSensorData.append(sensorDataHeader, sensor_name, info)\r\n}\r\n\r\nexport {createAirQualitySensorStyleSelected ,airQualitySensorStyle, airQualitySensorData, showAirQualitySensorData, AirQualityPopoverContent}","import VectorLayer from 'ol/layer/Vector.js';\r\nimport { createSensorDataVectorSource } from './sensor-utils';\r\nimport {fromLonLat} from 'ol/proj.js';\r\nimport Point from 'ol/geom/Point.js';\r\nimport Feature from 'ol/Feature.js';\r\nimport VectorSource from 'ol/source/Vector.js';\r\nimport Style from 'ol/style/Style.js';\r\nimport CircleStyle from 'ol/style/Circle.js';\r\nimport Fill from 'ol/style/Fill.js';\r\nimport Stroke from 'ol/style/Stroke.js';\r\nimport Text from 'ol/style/Text.js';\r\nimport Icon from 'ol/style/Icon.js';\r\n\r\nfunction createWaterLevelTemperatureSensorData(longitude, latitude) {\r\n  return {\r\n      \"coord\": {\r\n         \"lon\": longitude,\r\n         \"lat\": latitude\r\n      },\r\n      \"sensor_name\": \"Water Level Temperature Sensor\",\r\n      \"module_name\": \"Modul 1\",\r\n      \"data\": {\r\n          \"water_level\": 10,\r\n          \"water_temperature\": 10,\r\n          \"battery_voltage\": 10\r\n      }\r\n   }\r\n}\r\n\r\nconst waterLevelTemperatureSensorData = [\r\n    await createWaterLevelTemperatureSensorData(9.437341519465765, 54.793050186514364),\r\n    // await createSensorData(9.4295, 54.802),\r\n    // await createSensorData(9.542039207249285, 54.51069732199451), // Schleswig Schloss\r\n    // await createSensorData(9.71559392307798, 54.52414462677734), // Missunde\r\n    // await createSensorData(9.934568072662614, 54.66034130282637), // Kappeln\r\n    // await createSensorData(9.868234526079595, 54.47305515348609), // Eckernförde\r\n    // await createSensorData(10.133823712178105, 54.31114321214153), // Kiel Querkai\r\n    // await createSensorData(10.17132953616414, 54.329012329712754), // Kiel Schwentine Werft\r\n    // await createSensorData(10.216554343991787, 54.4042499260097), // Kiel Laboe\r\n    // await createSensorData(9.711172066706121, 54.313332929813754), // Rendsburg\r\n    // await createSensorData(9.126408784000207, 53.88780618582467), // Brunsbüttel\r\n    // await createSensorData(10.980480508401266, 54.375842855573865), // Heiligenhafen\r\n    // await createSensorData(11.19104586109911, 54.51394399850085), // Fehmarn\r\n    // await createSensorData(8.296229935540385, 54.909481414684905), // Westerland\r\n    // await createSensorData(8.694068755148862, 54.73080963743536), // Dagebüll\r\n    // await createSensorData(8.815529667066356, 54.48633428418012), // Nordstrand\r\n    // await createSensorData(8.58397921359508, 54.324191810957615), // Sankt Peter Ording\r\n    // await createSensorData(8.849777321827073, 54.12813503606), // Büsum\r\n    // await createSensorData( 9.591076207849072, 54.845860511473575), // Bockholm\r\n]\r\n\r\nfunction createWaterLevelTemperatureSensorStyle(feature) {\r\n  const data = feature.get('data')\r\n\r\n  const circle = new Style({\r\n    image: new CircleStyle({\r\n      radius: 15,\r\n      fill: new Fill({ color: 'rgba(0, 153, 255, 0.5)' }),\r\n      stroke: new Stroke({ color: '#0066cc', width: 1 })\r\n    }),\r\n    text: new Text({\r\n    font: '14px Calibri,sans-serif',\r\n    text: \"M1\",  // Use the 'name' property for the label\r\n    fill: new Fill({ color: '#000' }),\r\n    stroke: new Stroke({ color: '#fff', width: 3 }),\r\n    offsetY: -15,\r\n  })\r\n  });\r\n\r\n  return circle\r\n}\r\n\r\nfunction createWaterLevelTemperatureSensorStyleSelected(feature, stroke_color) {\r\n  const data = feature.get('data')\r\n\r\n  const circle = new Style({\r\n    image: new CircleStyle({\r\n      radius: 15,\r\n      fill: new Fill({ color: 'rgba(0, 153, 255, 0.5)' }),\r\n      stroke: new Stroke({ color: stroke_color, width: 1 })\r\n    }),\r\n    text: new Text({\r\n    font: '14px Calibri,sans-serif',\r\n    text: \"M1\",  // Use the 'name' property for the label\r\n    fill: new Fill({ color: '#000' }),\r\n    stroke: new Stroke({ color: '#fff', width: 3 }),\r\n    offsetY: -15,\r\n  })\r\n  });\r\n\r\n  return circle\r\n}\r\n\r\n\r\nconst waterLevelTemperatureSensorStyle = function (feature) {\r\n    return createWaterLevelTemperatureSensorStyle(feature);\r\n}\r\n\r\nfunction WaterLevelTemperaturePopoverContent(feature) {\r\n    const data = feature.get(\"data\")\r\n    const coord = feature.get(\"coord\")\r\n    return `\r\n    <p class=\"p-0 m-0\">Module Name: ${feature.get(\"module_name\")}</p>\\n\r\n    <p class=\"p-0 m-0\">Longitude: ${coord.lon}</p>\\n\r\n    <p class=\"p-0 m-0\">Latitude: ${coord.lat}</p>\\n\r\n    <p class=\"p-0 m-0\">Water Level: ${data.water_level}m</p>\\n\r\n    <p class=\"p-0 m-0\">Water Temperature: ${data.water_temperature}°C</p>\\n\r\n    <p class=\"p-0 m-0\">Battery Voltage: ${data.battery_voltage}V</p>\r\n    `\r\n}\r\n\r\nfunction showWaterLevelTemperatureSensorData(feature) {\r\n    let selectedSensorData = document.getElementById(\"selected-sensor-data\")\r\n    let sensorDataHeader = document.createElement(\"h2\")\r\n    let sensor_name = document.createElement(\"p\")\r\n    let info = document.createElement(\"div\")\r\n    \r\n    selectedSensorData.innerHTML = \"\"\r\n    sensorDataHeader.textContent = \"Sensor Data\"\r\n    sensor_name.textContent = \"Sensor Name: \" + feature.get(\"sensor_name\")\r\n    info.innerHTML = WaterLevelTemperaturePopoverContent(feature)\r\n\r\n    selectedSensorData.append(sensorDataHeader, sensor_name, info)\r\n}\r\n\r\nexport {createWaterLevelTemperatureSensorStyleSelected, waterLevelTemperatureSensorStyle, waterLevelTemperatureSensorData, showWaterLevelTemperatureSensorData, WaterLevelTemperaturePopoverContent}","function ShowPopover(popup, element, evt, feature, content) {\r\n    const coordinate = evt.coordinate;\r\n    popup.setPosition(coordinate);\r\n    DisposePopover(element)\r\n    const popover = new bootstrap.Popover(element, {\r\n        animation: true,\r\n        container: element,\r\n        content: content,\r\n        html: true,\r\n        placement: 'top',\r\n        title: feature.get(\"sensor_name\"),\r\n    });\r\n    popover.show();\r\n}\r\n\r\nfunction DisposePopover(element) {\r\n    let popover = bootstrap.Popover.getInstance(element);\r\n    if (popover) {\r\n      popover.dispose();\r\n    }\r\n}\r\n\r\nexport {ShowPopover, DisposePopover}","import TileLayer from \"ol/layer/Tile\"\r\n\r\n//Layer Switcher\r\nconst baseLayerElements = document.querySelectorAll(\".sidebar > .maps > input[type=radio]\")\r\n\r\nfunction InitBaseLayerSwitcher(map) {\r\n    baseLayerElements.forEach( (baseLayerElement) => {\r\n        baseLayerElement.addEventListener('change', function() {\r\n            let baseLayerElementValue = this.value\r\n            map.getLayers().forEach(function(element, index, array){\r\n                let baseLayerTitle = element.get('title')\r\n                if (element instanceof TileLayer) {\r\n                    element.setVisible(baseLayerTitle === baseLayerElementValue)\r\n                }\r\n            })\r\n        })\r\n    })\r\n    return baseLayerElements\r\n}\r\n\r\nexport {InitBaseLayerSwitcher}","import VectorLayer from \"ol/layer/Vector\"\r\n\r\n//Filter (Vector) Layer Switcher\r\nconst baseVectorLayerElements = document.querySelectorAll(\".sidebar > .filter > input[type=checkbox]\")\r\n\r\nfunction InitVectorLayerSwitcher(map) {\r\n    baseVectorLayerElements.forEach( (baseVectorLayerElement) => {\r\n        baseVectorLayerElement.addEventListener('change', function() {\r\n            let baseVectorLayerElementValue = this.value\r\n            let checked = this.checked\r\n            map.getLayers().forEach(function(element, index, array){\r\n                let baseVectorLayerTitle = element.get('title')\r\n                if (element instanceof VectorLayer && baseVectorLayerTitle === baseVectorLayerElementValue) {\r\n                    element.setVisible(checked)\r\n                }\r\n                // // Heatmap\r\n                // if (element instanceof HeatmapLayer && baseVectorLayerTitle === baseVectorLayerElementValue) {\r\n                    //   element.setVisible(checked)\r\n                    // }\r\n                })\r\n            })\r\n        })\r\n    return baseVectorLayerElements\r\n}\r\n\r\nexport {InitVectorLayerSwitcher}","function GetTemperatureColor(temperature)  {\r\n  if (temperature>=40) {return \"rgba(252,3,3,0.3)\"}\r\n  if (temperature>=30) {return \"rgba(252,177,3,0.3)\"}\r\n  if (temperature>=20) {return \"rgba(192,252,3,0.3)\"}\r\n  if (temperature>=10) {return \"rgba(32, 252, 3,0.3)\"}\r\n  if (temperature>=0) {return \"rgba(3,148,252,0.3)\"}\r\n}\r\n\r\n\r\nfunction CreateTemperatureElement() {\r\n    let temperatureElement = document.createElement(\"p\")\r\n    temperatureElement.style.fontWeight = 'bold';\r\n    temperatureElement.className = \"temperature-overlay-tile\"\r\n    return temperatureElement\r\n}\r\n\r\nfunction UpdateTemperatureElement(temperatureElement, airTemperature) {\r\n    temperatureElement.textContent = `${airTemperature}°C`\r\n    temperatureElement.style.backgroundColor = GetTemperatureColor(airTemperature)\r\n    return temperatureElement\r\n}\r\n\r\nexport {CreateTemperatureElement, UpdateTemperatureElement}","function CreateWindDirectionElement() {\r\n  let windDirectionElement = document.createElement(\"p\")    \r\n  windDirectionElement.style.margin = `0`\r\n  windDirectionElement.style.textAlign = \"center\"\r\n  windDirectionElement.style.fontSize = \"50px\"\r\n  windDirectionElement.textContent = `→`\r\n  windDirectionElement.style.fontWeight = 'bold';\r\n  return windDirectionElement\r\n}\r\n\r\nfunction UpdateWindDirectionElement(windDirectionElement, rotation) {\r\n    windDirectionElement.style.rotate = `${rotation + 90}deg`\r\n    return windDirectionElement\r\n}\r\n\r\nexport {CreateWindDirectionElement, UpdateWindDirectionElement}","import {fromLonLat, toLonLat} from 'ol/proj';\r\nimport { CreateTemperatureElement, UpdateTemperatureElement } from \"./temperature-overlay\";\r\nimport { CreateWindDirectionElement, UpdateWindDirectionElement } from \"./wind-direction-overlay\";\r\n\r\nfunction GetClosestFeatureOfElement(map, vectorSource, element) {\r\n  let rect = element.getBoundingClientRect()\r\n  const coordinate = map.getCoordinateFromPixel([rect.x,rect.y]);\r\n  let featureLonLat = toLonLat(coordinate)\r\n  let closestFeature = vectorSource.getClosestFeatureToCoordinate(fromLonLat(featureLonLat));\r\n      \r\n  return closestFeature\r\n}\r\n\r\nfunction DrawOverlay(map, vectorSource, overlay, x_num, y_num, elementType) {\r\n  overlay.innerHTML = ''\r\n  let row = document.createElement(\"div\")\r\n  row.classeName = \"row\"\r\n  overlay.append(row)\r\n\r\n  for (let y = 0; y < y_num; y++) {\r\n    let col = document.createElement(\"div\")\r\n    col.className = \"col d-flex align-items-center\"\r\n    row.append(col)\r\n    for(let x = 0; x < x_num; x++) {\r\n      let element = undefined\r\n      switch (elementType) {\r\n        case \"Temperature\": element = CreateTemperatureElement(); break;\r\n        case \"WindDirection\": element = CreateWindDirectionElement(); break;\r\n      }\r\n      \r\n\r\n      element.style.width = `${overlay.getBoundingClientRect().width / x_num}px`\r\n      element.style.height = `${overlay.getBoundingClientRect().height / y_num}px`   \r\n      col.append(element)\r\n      let closestFeature = GetClosestFeatureOfElement(map, vectorSource, element)\r\n\r\n      switch (elementType) {\r\n        case \"Temperature\": element = UpdateTemperatureElement(element, closestFeature.get(\"data\").air_temperature); break;\r\n        case \"WindDirection\": element = UpdateWindDirectionElement(element, closestFeature.get(\"data\").wind_direction); break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport {DrawOverlay}","import Map from 'ol/Map.js';\r\nimport View from 'ol/View.js';\r\nimport TileLayer from 'ol/layer/Tile.js';\r\nimport VectorLayer from 'ol/layer/Vector.js';\r\nimport OSM from 'ol/source/OSM.js';\r\nimport {fromLonLat, toLonLat} from 'ol/proj';\r\nimport Select from 'ol/interaction/Select.js';\r\nimport { singleClick } from 'ol/events/condition.js';\r\nimport Style from 'ol/style/Style.js';\r\nimport { Overlay } from 'ol';\r\nimport { AirPropertiesPopoverContent, airPropertiesSensorData, airPropertiesSensorStyle, showAirPropertiesSensorData, airPropertiesSensorVectorSource, createAirPropertiesSensorStyleSelected } from './data/air-properties-sensor.js';\r\nimport { AirQualityPopoverContent, airQualitySensorStyle, airQualitySensorData, showAirQualitySensorData, createAirQualitySensorStyleSelected } from './data/air-quality-sensor.js';\r\nimport { WaterLevelTemperaturePopoverContent, waterLevelTemperatureSensorStyle, waterLevelTemperatureSensorData, showWaterLevelTemperatureSensorData, createWaterLevelTemperatureSensorStyleSelected } from './data/water-level-temperature-sensor.js';\r\nimport { createSensorDataVectorSource } from './data/sensor-utils.js';\r\nimport { ShowPopover, DisposePopover } from './popover.js';\r\nimport { InitBaseLayerSwitcher } from './layer_switcher/base-layer-switcher.js';\r\nimport { InitVectorLayerSwitcher } from './layer_switcher/vector-layer-switcher.js';\r\nimport { DrawOverlay } from './overlays/overlay.js';\r\n\r\nconst map = new Map({\r\n  layers: [\r\n    new TileLayer({\r\n      source: new OSM(),\r\n      visible: true,\r\n      title: \"OSMStandard\"\r\n    }),\r\n    new TileLayer({\r\n      source: new OSM({\r\n        url: \"https://{a-c}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\r\n      }),\r\n      visible: false,\r\n      title: \"OSMHumanitarian\"\r\n    }),\r\n    new TileLayer({\r\n      source: new OSM({\r\n        url: \"https://{a-c}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\"\r\n      }),\r\n      visible: false,\r\n      title: \"OSMCyclosm\"\r\n    }),\r\n    new VectorLayer({\r\n      source: airPropertiesSensorVectorSource,\r\n      visible: true,\r\n      title: \"AirProperties\",\r\n      style: airPropertiesSensorStyle,\r\n    }),\r\n    new VectorLayer({\r\n      source: createSensorDataVectorSource(airQualitySensorData),\r\n      visible: true,\r\n      title: \"AirQuality\",\r\n      style: airQualitySensorStyle,\r\n    }),\r\n    new VectorLayer({\r\n      source: createSensorDataVectorSource(waterLevelTemperatureSensorData),\r\n      visible: true,\r\n      title: \"WaterLevelTemperature\",\r\n      style: waterLevelTemperatureSensorStyle,\r\n    }),\r\n    ],\r\n    target: 'map',\r\n    view: new View({\r\n      center: fromLonLat([9.432, 54.798]),\r\n      zoom: 10,\r\n    }),\r\n  });\r\n\r\n// Init LayerSwitchers\r\nconst baseLayerElements = InitBaseLayerSwitcher(map)\r\nconst vectorLayerElements = InitVectorLayerSwitcher(map)\r\n\r\n// POPOVER Variables\r\nconst popup = new Overlay({\r\n  element: document.getElementById('popup'),\r\n});\r\nconst element = popup.getElement();\r\nmap.addOverlay(popup);\r\n \r\n// Init Overlays\r\nconst temperatureOverlay = document.getElementById('temperature-overlay');\r\nconst windDirectionOverlay = document.getElementById('wind-direction-overlay');\r\n\r\n// Init Overlay Checkbox Listeners\r\nconst temperatureOverlayCheckboxListener = InitTemperatureOverlayListener(temperatureOverlay)\r\nconst windDirectionOverlayCheckboxListener =  InitWindDirectionOverlayListener(windDirectionOverlay)\r\n\r\nconst selectInteraction = new Select({\r\n  condition: singleClick,\r\n  style: function (feature) {\r\n    let name = \"\"\r\n    let selectedColor = \"#D3AF37\"\r\n    let style = new Style()\r\n\r\n    switch (feature.get(\"module_name\")) {\r\n      case \"Modul 1\": \r\n        name = \"M1\"\r\n        style = createWaterLevelTemperatureSensorStyleSelected(feature, selectedColor)\r\n        break;\r\n      case \"Modul 2\": \r\n        name = \"M2\"\r\n        style = createAirPropertiesSensorStyleSelected(feature, selectedColor)\r\n        break;\r\n      case \"Modul 3\": \r\n        name = \"M3\" \r\n        style = createAirQualitySensorStyleSelected(feature, selectedColor)\r\n        break;\r\n    }\r\n    return style\r\n}\r\n})\r\n\r\nmap.addInteraction(selectInteraction)\r\n\r\nmap.on('click', function (evt) {\r\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\r\n    switch (feature.get(\"sensor_name\")) {\r\n      case \"Air Properties Sensor\": \r\n        showAirPropertiesSensorData(feature)\r\n        ShowPopover(popup, element, evt, feature, AirPropertiesPopoverContent(feature))\r\n      break;\r\n      case \"Air Quality Sensor\": \r\n        showAirQualitySensorData(feature)\r\n        ShowPopover(popup, element, evt, feature, AirQualityPopoverContent(feature))\r\n      break;\r\n      case \"Water Level Temperature Sensor\": \r\n        showWaterLevelTemperatureSensorData(feature)\r\n        ShowPopover(popup, element, evt, feature, WaterLevelTemperaturePopoverContent(feature))\r\n      break;\r\n    }\r\n    return feature\r\n  });\r\n    if (!feature) {\r\n      DisposePopover(element)\r\n\r\n      // No feature found — get coordinates\r\n      const coordinate = evt.coordinate;\r\n      const lonLat = toLonLat(coordinate)\r\n      console.log(lonLat)\r\n  }\r\n});\r\n\r\nmap.on('moveend', function () {\r\n  console.log('View has changed');\r\n\r\n  if (temperatureOverlayCheckboxListener.checked) {\r\n    temperatureOverlay.style.display = \"\"\r\n    DrawOverlay(map, airPropertiesSensorVectorSource, temperatureOverlay, 10, 10, \"Temperature\")\r\n  } else {\r\n    temperatureOverlay.style.display = \"none\"\r\n  }\r\n  if (windDirectionOverlayCheckboxListener.checked) {\r\n    windDirectionOverlay.style.display = \"\"\r\n    DrawOverlay(map, airPropertiesSensorVectorSource, windDirectionOverlay, 10, 10, \"WindDirection\")\r\n  } else {\r\n    windDirectionOverlay.style.display = \"none\"\r\n  }\r\n\r\n  map.render();\r\n});\r\n\r\n\r\nfunction InitTemperatureOverlayListener(temperatureOverlay) {\r\n    const temperatureCheckboxListener = document.getElementById('temperatureCheckbox');\r\n    temperatureCheckboxListener.addEventListener(\"change\", function () {\r\n    if (temperatureCheckboxListener.checked) {\r\n        temperatureOverlay.style.display = \"\"\r\n        DrawOverlay(map, airPropertiesSensorVectorSource, temperatureOverlay, 10, 10, \"Temperature\")\r\n    } else {\r\n        temperatureOverlay.style.display = \"none\"\r\n    }\r\n    })\r\n    return temperatureCheckboxListener\r\n}\r\n\r\nfunction InitWindDirectionOverlayListener(windDirectionOverlay) {\r\n    const windOverlayCheckboxListener = document.getElementById('windDirectionCheckbox');\r\n    windOverlayCheckboxListener.addEventListener(\"change\", function () {\r\n      if (windOverlayCheckboxListener.checked) {\r\n        windDirectionOverlay.style.display = \"\"\r\n        DrawOverlay(map, airPropertiesSensorVectorSource, windDirectionOverlay, 10, 10, \"WindDirection\")\r\n      } else {\r\n        windDirectionOverlay.style.display = \"none\"\r\n      }\r\n    })\r\n    return windOverlayCheckboxListener\r\n}\r\n\r\n\r\n\r\n\r\n    // // Function to render the temperature labels\r\n    // function renderTemperatureLabels() {\r\n    //   overlayEl.innerHTML = ''; // Clear old labels\r\n\r\n    //   temperatureData.forEach(({ temp, x, y }) => {\r\n    //     const div = document.createElement('div');\r\n    //     div.className = 'temp-label';\r\n    //     div.style.left = `${x}px`;\r\n    //     div.style.top = `${y}px`;\r\n    //     div.innerText = temp;\r\n    //     overlayEl.appendChild(div);\r\n    //   });\r\n    // }\r\n\r\n    // // Create an OpenLayers overlay to anchor the container to the map view\r\n    // const tempOverlay = new Overlay({\r\n    //   element: overlayEl,\r\n    //   positioning: 'top-left',\r\n    //   stopEvent: false,\r\n    //   offset: [0, 0],\r\n    // });\r\n\r\n    // map.addOverlay(tempOverlay);\r\n    // tempOverlay.setPosition(map.getCoordinateFromPixel([0, 0]));\r\n\r\n    // // Render the temperature labels\r\n    // renderTemperatureLabels();\r\n\r\n    // //Optional: update position on resize\r\n    // window.addEventListener('resize', () => {\r\n    //   tempOverlay.setPosition(map.getCoordinateFromPixel([0, 0]));\r\n    // });\r\n\r\n// // 2. Wind Canvas setup\r\n// const canvas = document.getElementById('wind-canvas');\r\n// const ctx = canvas.getContext('2d');\r\n// const numParticles = 100;\r\n// let particles = [];\r\n// function resizeCanvas() {\r\n//   canvas.width = map.getSize()[0];\r\n//   canvas.height = map.getSize()[1];\r\n// }\r\n\r\n// map.on('moveend', resizeCanvas);\r\n// resizeCanvas();\r\n\r\n// // 3. Initialize fake wind vector field (u = 1, v = 0.5 everywhere)\r\n// function getWindAt(x, y) {\r\n//   // You could use actual vector field data here\r\n//   return { u: 1, v: 0 }; // simple constant east-northeast wind\r\n// }\r\n\r\n// // 4. Particle system\r\n// function resetParticle(p) {\r\n//   p.x = Math.random() * canvas.width;\r\n//   p.y = Math.random() * canvas.height;\r\n//   p.age = 0;\r\n// }\r\n\r\n// for (let i = 0; i < numParticles; i++) {\r\n//   particles.push({ x: 0, y: 0, age: 0 });\r\n//   resetParticle(particles[i]);\r\n// }\r\n\r\n// // 5. Animate\r\n// function animate() {\r\n//   ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n//   ctx.fillStyle = 'rgba(0, 0, 0, 0)'; // trail fade\r\n//   ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n//   ctx.strokeStyle = 'rgb(3, 3, 3)';\r\n//   ctx.lineWidth = 1.4;\r\n//   ctx.beginPath();\r\n//   for (let p of particles) {\r\n//     const wind = getWindAt(p.x, p.y);\r\n//     const oldX = p.x-50;\r\n//     const oldY = p.y;\r\n//     p.x += wind.u * 2;\r\n//     p.y += wind.v * 2;\r\n//     p.age++;\r\n\r\n//     // Reset if out of bounds or too old\r\n//     if (p.x < 0 || p.x > canvas.width || p.y < 0 || p.y > canvas.height || p.age > 600) {\r\n//       resetParticle(p);\r\n//     } else {\r\n//       ctx.moveTo(oldX, oldY);\r\n//       ctx.lineTo(p.x, p.y);\r\n//     }\r\n\r\n//   }\r\n\r\n//   ctx.stroke();\r\n//   requestAnimationFrame(animate);\r\n// }\r\n\r\n// animate();\r\nexport {map}"],"names":["CollectionEventType","ObjectEventType","EventType$1","Disposable","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","descending","linearFindNearest","arr","target","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","toPromise","getter","promiseGetter","value","err","clear","object","property","isEmpty","BaseEvent","type","Target","listener","listeners","listenersForType","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","pr","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","EventType","len","keys","unByKey","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","eventType","silent","source","Property","CollectionEvent","element","Collection","array","options","f","elem","prev","except","MapEvent","map","frameState","MapBrowserEvent","originalEvent","dragging","activePointers","pixel","coordinate","MapBrowserEventType","ua","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","passive","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","id","pointerId","doc","MapEventType","MapProperty","TileState","assert","assertion","errorMessage","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","TileQueue","tilePriorityFunction","tileChangeCallback","added","tile","state","tileKey","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","center","deltaX","deltaY","ViewHint","ViewProperty","clamp","min","max","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","r","absValue","j","coef","k","l","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","floor","ceil","wrap","range","createExtent","extent","onlyCenter","smooth","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","ratio","none","Relationship","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","rotation","x0","y0","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","multiWorld","add","delta","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","worldsAway","getWorldsAway","sourceExtentWidth","easeIn","easeOut","inAndOut","linear","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","warn","args","METERS_PER_UNIT","Projection","global","tileGrid","worldExtent","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","code","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","transforms","destination","transformFn","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M2","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c","d","d2","d3","d4","d5","d6","latitude","longitude","zoneToCentralLongitude","MIN_LATITUDE","MAX_LATITUDE","MIN_LONGITUDE","MAX_LONGITUDE","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLon","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","match","number","north","makeTransformFunction","transformer","coord","makeProjection","makeTransforms","transformFactories","makeUTMTransforms","projectionFactories","makeUTMProjection","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","projUnits","getTransformFromProjections","vertices","width","height","metersPerUnit","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","transform","lonLat","lon","equivalent","equalUnits","transformFunc","getTransformFunc","sourceTransforms","destinationTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","sourceProjection","destinationProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","create","setFromArray","transform1","transform2","apply","compose","dx1","dy1","sx","sy","dx2","dy2","sin","cos","makeInverse","det","determinant","e","matrixPrecision","toString","fromString","cssTransform","cssTransform1","cssTransform2","mat1","mat2","transform2D","destinationStride","anchor","anchorX","anchorY","translate","tmpTransform","createTransform","tmpPoint","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","tolerance","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","transformed","projTransform","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","linearRing","twiceArea","linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","LinearRing","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","inflateEnds","prevEndIndex","startOrientation","orientation","Polygon","polygon","linearRingsArea","flatCenter","fromExtent","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","DEFAULT_MIN_ZOOM","View","properties","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","padding","oldPadding","newPadding","offsetX","offsetY","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","fraction","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","hints","zoom","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","geometry","polygonFromExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","minZoom","maxZoom","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","style","createCanvasContext2D","canvasPool","settings","canvas","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","outerWidth","outerHeight","replaceNode","newNode","oldNode","parent","removeChildren","node","replaceChildren","children","oldChildren","oldChild","newChild","Control","mapEvent","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","label","activeLabel","cssClasses","layers","visibleAttributions","layer","item","collapsible","attributions","attribution","visible","collapsed","Rotate","compassClassName","button","view","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","defaults","controls","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","stopEvent","browserEvent","all","conditions","pass","altShiftKeysOnly","focus","targetElement","rootNode","activeElement","focusWithTabindex","always","mouseActionButton","never","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","DragPan","condition","targetPointers","centroidFromPointers","scaleCoordinate","distance","centerpx","DragRotate","RenderBox","startPixel","endPixel","px","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragZoom","Key","KeyboardPan","keyEvent","mapUnitsDelta","KeyboardZoom","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","PinchZoom","scaleDelta","interactions","kinetic","LayerProperty","BaseLayer","managed","zIndex","states","background","opacity","zindex","GroupEvent","LayerGroup","baseOptions","layersArray","listenerKeys","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","layerState","Layer","layerExtent","inView","getAttributions","layerRenderer","RenderEventType","renderEvent","layerStatesArray","arrayLayerState","viewState","quickselect","left","quickselectStep","defaultCompare","s","sd","newLeft","newRight","swap","RBush$1","maxEntries","bbox","toBBox","nodesToSearch","child","childBBox","tmpNode","createNode","equalsFn","path","indexes","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","NO_COLOR","colorParseContext","getColorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","throwInvalidColor","color","parseRgba","rgb","alpha","rgbDivider","hex","step","colorFromHex","colorComponent","invalidCheckFillStyle","colorString","colorFromImage","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","b1","v","b2","a1","rgbaToLcha","g","q","lchaToRgba","asArray","hasArea","toSize","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","isSpecific","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","parse","encoded","expectedType","colorFromString","parseCallExpression","Ops","parsers","createCallExpressionParser","hasArgsCount","withGetArgs","withVarArgs","usesFeatureId","withNoArgs","withArgsOfType","usesGeometryType","usesMapState","withArgsOfReturnType","hasEvenArgs","withMatchArgs","withInterpolateArgs","hasOddArgs","withCaseArgs","withInArgs","withPaletteArgs","returnType","argsCount","name","operation","minArgs","maxArgs","argCount","plural","expression","argType","inputType","fallback","interpolationType","base","interpolation","stop","needleType","arg","colors","parsedColors","validators","parsed","parser","computeGeometryType","newEvaluationContext","buildExpression","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","ImageState","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","error","load","src","resolve","reject","handleLoad","unlisten","handleError","decodeFallback","IconImageCache","iconImage","crossOrigin","getCacheKey","pattern","update","maxCacheSize","shared","taintedTestContext","IconImage","imageState","pixelRatio","ctx","onChange","cacheKey","iconImageCache","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","weight","family","families","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","executeLabelInstructions","contextInstructions","ImageStyle","displacement","rotateWithView","RegularShape","fill","fillKey","renderOptions","stroke","lineJoin","strokeWidth","miterLimit","r1","r2","points","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","lineCap","lineDash","lineDashOffset","strokeStyle","maxRadius","radius2","startAngle","angle0","radiusC","CircleStyle","Fill","patternImage","calculateScale","wantedWidth","wantedHeight","Icon","onload","imageSize","iconImageSize","Stroke","Style","defaultGeometryFunction","renderer","feature","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","placement","repeat","keepUpright","textAlign","justify","textBaseline","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","filter","styleLength","someMatched","filterEvaluator","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","declutterMode","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","circle","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","BaseVectorLayer","declutterGroup","RBush","renderOrder","styleLike","toStyleLike","toStyleFunction","declutter","RenderEvent","inversePixelTransform","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","order","expireIconCache","CompositeMapRenderer","container","renderedLayerStates","previousElement","sourceState","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","features","addLayersFrom","layerGroup","viewportPosition","scaleX","scaleY","eventPosition","applyTransform","group","viewCoordinate","currentDoc","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","keyboardEventTarget","targetRoot","time","previousFrameState","viewHints","equalsExtent","oldLayerGroup","computedStyle","oldSize","overlays","Tile","tileCoord","asImageLike","disposedError","defaultSize","DataTile","imageData","self","ImageTile","tileLoadFunction","getBlankImage","TileRange","tileRange","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetProj","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","render","triangulation","sources","gutter","renderEdges","interpolate","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","transformInvCache","transformInv","applyMatrix","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","LRUCache","highWaterMark","entry","keep","getKeyZXY","hash","hashZXY","withinExtentAndZ","ZIndexContext","instructions","instructionsAtIndex","instructionAtIndex","maxStaleKeys","LayerRenderer","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","topLeft","topRight","bottomRight","bottomLeft","inverted","canvasTransform","toTransformString","sourceKey","addTileToLookup","tilesByZ","set","existing","removeTileFromLookup","getRenderExtent","gridExtent","CanvasTileLayerRenderer","tileLayer","createTileCoord","tileCache","tileSource","tilePixelRatio","tileOrigin","tileSize","sourceRevision","initialZ","preload","wantedTiles","minZ","viewport","tileQueueKey","staleKeys","altZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","targetZ","nextExtent","renderExtent","uid","tileState","parentZ","canvasScale","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","postRenderFunction","tilesCount","tileCount","alphaChanged","usedTiles","TileProperty","BaseTileLayer","useInterimTilesOnError","TileLayer","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","dashArray","dash","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","CanvasInstruction","hitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","endGeometryInstruction","CanvasImageBuilder","myBegin","filteredFlatCoordinates","sharedData","CanvasLineStringBuilder","moveToLineToInstruction","CanvasPolygonBuilder","numEnds","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","fillState","strokeState","textState","geometryType","flatOffset","o","oo","cc","chunk","chunkBegin","geometryWidths","beg","backgroundFill","backgroundStroke","p0","p1","p2","p3","hitDetectionBackgroundFill","strokeKey","textKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","lineStringLength","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","richTextToPlainText","part","Executor","overlaps","deferredRendering","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","imageDeclutter","renderImage","renderText","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","CanvasImmediateRenderer","userTransform","localTransform","close","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","textReplay","renderFeature","replayGroup","loadingPromises","loading","renderFeatureInternal","renderGeometry","geometryRenderer","declutterBuilderGroup","lineStringReplay","polygonReplay","hasText","imageReplay","hasImage","CanvasVectorLayerRenderer","vectorLayer","executorGroup","declutterable","vectorSource","endWorld","world","intersectsExtent","getSquaredRenderTolerance","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","ready","dirty","replayGroupInstructions","VectorLayer","tmpTileCoord","DECIMALS","TileGrid","restrictedTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","zRegEx","xRegEx","yRegEx","dashYRegEx","renderXYZTemplate","template","expandUrl","url","urls","startCharCode","stopCharCode","charCode","createFromTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","Source","adaptAttributions","attributionLike","TileSource","getTileGridForProjection","scaleSize","gridProjection","TileSourceEvent","TileEventType","UrlTile","tileUrlFunction","TileImage","defaultTileLoadFunction","thisProj","projKey","urlTileCoord","tileUrl","tilegrid","proj","imageTile","XYZ","ATTRIBUTION","OSM","Feature","geometryOrProperties","createStyleFunction","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","getDefaultStyleFunction","remove","toggle","interpolatePoint","cumulativeLengths","withCredentials","loadFeaturesXhr","format","success","failure","xhr","dataProjection","linearRingss","RenderFeature","linearRingssCenter","midpoint","RBush_","extents","rbush","VectorEventType","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","featureKey","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","clearEvent","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","removed","idString","loader","Overlay","panIntoViewOptions","mapRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","positioning","mapSize","posX","posY","createSensorDataVectorSource","sensorData","sensorDataSource","createAirPropertiesSensorData","fetchedData","fetchAirPropertiesSensorData","airPropertiesSensorData","createAirPropertiesSensorStyle","wind_arrow","createAirPropertiesSensorStyleSelected","stroke_color","airPropertiesSensorStyle","AirPropertiesPopoverContent","showAirPropertiesSensorData","selectedSensorData","sensorDataHeader","sensor_name","info","airPropertiesSensorVectorSource","createAirQualitySensorData","airQualitySensorData","createAirQualitySensorStyle","createAirQualitySensorStyleSelected","airQualitySensorStyle","AirQualityPopoverContent","showAirQualitySensorData","createWaterLevelTemperatureSensorData","waterLevelTemperatureSensorData","createWaterLevelTemperatureSensorStyle","createWaterLevelTemperatureSensorStyleSelected","waterLevelTemperatureSensorStyle","WaterLevelTemperaturePopoverContent","showWaterLevelTemperatureSensorData","ShowPopover","popup","content","DisposePopover","popover","baseLayerElements","InitBaseLayerSwitcher","baseLayerElement","baseLayerElementValue","baseLayerTitle","baseVectorLayerElements","InitVectorLayerSwitcher","baseVectorLayerElement","baseVectorLayerElementValue","checked","baseVectorLayerTitle","GetTemperatureColor","temperature","CreateTemperatureElement","temperatureElement","UpdateTemperatureElement","airTemperature","CreateWindDirectionElement","windDirectionElement","UpdateWindDirectionElement","GetClosestFeatureOfElement","rect","featureLonLat","DrawOverlay","x_num","y_num","elementType","temperatureOverlay","windDirectionOverlay","temperatureOverlayCheckboxListener","InitTemperatureOverlayListener","windDirectionOverlayCheckboxListener","InitWindDirectionOverlayListener","selectInteraction","selectedColor","temperatureCheckboxListener","windOverlayCheckboxListener"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179]}